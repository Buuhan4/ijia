document
  .getElementById("mortgageAmount")
  .addEventListener("input", function (e) {
    let inputValue = e.target.value;
    let lastKey = inputValue.substring(inputValue.length - 1);
    if (!lastKey.match(/^[0-9,]$/)) {
      e.target.value = inputValue.substring(0, inputValue.length - 1);
    } else {
      let valueWithoutCommas = inputValue.replace(/,/g, "");
      if (valueWithoutCommas.length > 3) {
        let valueWithCommas = "";
        for (let i = 0; i < valueWithoutCommas.length; i++) {
          if (i % 3 == 0 && i !== 0) {
            valueWithCommas += ",";
          }
          valueWithCommas += valueWithoutCommas[i];
        }
        e.target.value = valueWithCommas;
      }
    }

    if (e.target.value !== "") {
      e.target.classList.remove('error');
      e.target.parentElement.querySelector('.input-group-text').classList.remove('error');
      document.getElementById('mortgageAmountError').textContent = '';
    }
  });

document.getElementById("mortgageTerm").addEventListener("input", function (e) {
  let inputValue = e.target.value;
  let lastKey = inputValue.substring(inputValue.length - 1);
  if (!lastKey.match(/^[0-9]$/)) {
    e.target.value = inputValue.substring(0, inputValue.length - 1);
  }

  if (e.target.value !== "") {
    e.target.classList.remove('error');
    e.target.parentElement.querySelector('.input-group-text').classList.remove('error');
    document.getElementById('mortgageTermError').textContent = '';
  }
});

document.getElementById("interestRate").addEventListener("input", function (e) {
  let inputValue = e.target.value;
  let lastKey = inputValue.substring(inputValue.length - 1);
  if (!lastKey.match(/^[0-9.]$/)) {
    e.target.value = inputValue.substring(0, inputValue.length - 1);
  } else {
    let dotIndex = inputValue.indexOf(".");
    if (dotIndex !== -1 && lastKey === ".") {
      e.target.value = inputValue.substring(0, inputValue.length - 1);
    }
  }

  if (e.target.value !== "") {
    e.target.classList.remove('error');
    e.target.parentElement.querySelector('.input-group-text').classList.remove('error');
    document.getElementById('interestRateError').textContent = '';
  }
});


document.querySelectorAll('input[name="mortgageType"]').forEach(radio => {
  radio.addEventListener('change', function () {
    document.getElementById('mortgageTypeError').textContent = '';
  });
});

function validateForm() {
  let valid = true;

  const mortgageAmount = document.getElementById('mortgageAmount');
  const mortgageAmountGroup = mortgageAmount.parentElement;
  if (mortgageAmount.value === '') {
    mortgageAmount.classList.add('error');
    mortgageAmountGroup.querySelector('.input-group-text').classList.add('error');
    document.getElementById('mortgageAmountError').textContent = 'This field is required';
    valid = false;
  }

  const mortgageTerm = document.getElementById('mortgageTerm');
  const mortgageTermGroup = mortgageTerm.parentElement;
  if (mortgageTerm.value === '') {
    mortgageTerm.classList.add('error');
    mortgageTermGroup.querySelector('.input-group-text').classList.add('error');
    document.getElementById('mortgageTermError').textContent = 'This field is required';
    valid = false;
  }

  const interestRate = document.getElementById('interestRate');
  const interestRateGroup = interestRate.parentElement;
  if (interestRate.value === '') {
    interestRate.classList.add('error');
    interestRateGroup.querySelector('.input-group-text').classList.add('error');
    document.getElementById('interestRateError').textContent = 'This field is required';
    valid = false;
  }

  const mortgageType = document.querySelector('input[name="mortgageType"]:checked');
  if (!mortgageType) {
    document.getElementById('mortgageTypeError').textContent = 'This field is required';
    valid = false;
  }

  if (valid) {
    calculateRepayments();
  }

  return valid;
}

function calculateRepayments() {
  let mortgageAmount = parseFloat(document.getElementById("mortgageAmount").value.replace(/,/g, ""));
  let mortgageTerm = parseFloat(document.getElementById("mortgageTerm").value);
  let interestRate = parseFloat(document.getElementById("interestRate").value);

  if (isNaN(mortgageAmount) || isNaN(mortgageTerm) || isNaN(interestRate)) {
    return;
  }

  let isRepaymentSelected = document.getElementById("repayment").checked;
  let isInterestOnlySelected = document.getElementById("interestOnly").checked;

  if (!isRepaymentSelected && !isInterestOnlySelected) {
    return;
  }
  if (isRepaymentSelected) {
    isRepayment();
  } else if (isInterestOnlySelected) {
    isInterestOnly();
  }
}

function isRepayment() {
  let mortgageAmount = parseFloat(document.getElementById("mortgageAmount").value.replace(/,/g, ""));
  let mortgageTerm = parseFloat(document.getElementById("mortgageTerm").value);
  let interestRate = parseFloat(document.getElementById("interestRate").value);

  let monthlyInterestRate = interestRate / 100 / 12;
  let months = mortgageTerm * 12;
  let repayment = 0;

  if (monthlyInterestRate > 0) {
    repayment = (mortgageAmount * monthlyInterestRate) / (1 - Math.pow(1 + monthlyInterestRate, -months));
  } else {
    repayment = mortgageAmount / months;
  }

  let totalRepayment = repayment * months;

  document.getElementById("result").value = `£${repayment.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`;
  document.getElementById("results2").value = `£${totalRepayment.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`;
  document.querySelector(".results").style.display = "none";
  document.querySelector(".results-2").style.display = "block";
}

function isInterestOnly() {
  let mortgageAmount = parseFloat(document.getElementById("mortgageAmount").value.replace(/,/g, ""));
  let mortgageTerm = parseFloat(document.getElementById("mortgageTerm").value);
  let interestRate = parseFloat(document.getElementById("interestRate").value);

  let annualInterest = mortgageAmount * (interestRate / 100);
  let totalInterest = annualInterest * mortgageTerm;
  let monthlyInterest = annualInterest / 12;

  document.getElementById("result").value = `£${monthlyInterest.toFixed(2).replace(/,/g, "")}`;
  document.getElementById("results2").value = `£${totalInterest.toFixed(2).replace(/,/g, "")}`;
  document.querySelector(".results").style.display = "none";
  document.querySelector(".results-2").style.display = "block";
}


const repayment = document.getElementById('repayment');
const interestOnly = document.getElementById('interestOnly');


repayment.addEventListener('change', () => {
  if (repayment.checked) {
    document.getElementById('radio-cont1').style.backgroundColor = "rgba(215, 218, 47, .2)";
    document.getElementById('text-cont1').style.backgroundColor = "rgba(215, 218, 47, .2)";
    document.getElementById('radio-cont1').style.backgroundColor = "rgba(215, 218, 47, .2)";
  } else {
    document.getElementById('radio-cont1').style.backgroundColor = "#ffffff";
    document.getElementById('text-cont1').style.backgroundColor = "#ffffff";
    document.getElementById('radio-cont1').style.border = "none";
  }


  if (!interestOnly.checked) {
    document.getElementById('radio-cont2').style.backgroundColor = "#ffffff";
    document.getElementById('text-cont2').style.backgroundColor = "#ffffff";
    document.getElementById('radio-cont2').style.border = "none";
  }
});


interestOnly.addEventListener('change', () => {
  if (interestOnly.checked) {
    document.getElementById('radio-cont2').style.backgroundColor = "rgba(215, 218, 47, .2)";
    document.getElementById('text-cont2').style.backgroundColor = "rgba(215, 218, 47, .2)";
    document.getElementById('radio-cont2').style.border = "2px solid #d7da2f";
  } else {
    document.getElementById('radio-cont2').style.backgroundColor = "#ffffff";
    document.getElementById('text-cont2').style.backgroundColor = "#ffffff";
    document.getElementById('radio-cont2').style.border = "none";
  }

  if (!repayment.checked) {
    document.getElementById('radio-cont1').style.backgroundColor = "#ffffff";
    document.getElementById('text-cont1').style.backgroundColor = "#ffffff";
    document.getElementById('radio-cont1').style.border = "none";
  }
});


@font-face {
  font-family: "PlusJakartaSans-Italic-VariableFont_wght";
  src: url(assets/fonts/PlusJakartaSans-Italic-VariableFont_wght.ttf);
}
@font-face {
  font-family: "PlusJakartaSans-VariableFont_wght";
  src: url(assets/fonts/PlusJakartaSans-VariableFont_wght.ttf);
}
@font-face {
  font-family: "PlusJakartaSans-Bold";
  src: url(assets/fonts/static/PlusJakartaSans-Bold.ttf);
}
@font-face {
  font-family: "PlusJakartaSans-Medium";
  src: url(assets/fonts/static/PlusJakartaSans-Medium.ttf);
}
body {
  background-color: hsl(197, 4%, 66%);
  padding: 20px;
  font-family: "PlusJakartaSans-Medium";
}
.calculator {
  max-width: 800px;
  margin: auto;
  background-color: #ffffff;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: #fff;
  padding: 15px;
}
.results {
  background-color: hsl(202, 55%, 16%);
  color: #fff;
  border-radius: 0 10px 10px 67px;
  padding: 20px;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
label {
  color: hsl(200, 24%, 40%);
}

.form-check-inline {
  display: block;
  margin-bottom: 5px;
}

.form-check-inline input {
  margin-right: 10px;
}

.inline-group {
  display: flex;
  gap: 10px;
}

.mortgage-div {
  height: 65px;
}

.clear {
  text-align: right;
  color: hsl(200, 24%, 40%);
  height: fit-content;  
}

button {
  height: 50px;
  width: 270px;
  border-radius: 999px;
  background-color: hsl(61, 70%, 52%);
  border: none;
  font-family: "PlusJakartaSans-Bold";
}
.emote-calculator {
  padding-right: 7px;
  width: 26px;
}
.input-group:focus-within .input-group-text {
  background-color: hsl(61, 70%, 52%);
  font-family: "PlusJakartaSans-Bold";
}

input[type="text"]:focus {
  box-shadow: none;
  appearance: none;
  border: hsl(61, 70%, 52%) solid;
}

.input-group:focus-within .radio {
  background-color: white;
}

.onlyInterest,
.repayment {
  border-left: none;
}

input[type="radio"]:checked {
  background-color: hsl(61, 70%, 52%);
}

.interestInput:focus {
  box-shadow: none;
  appearance: none;
  border: hsl(61, 70%, 52%) solid;
}

.input-group-text {
  color: hsl(200, 24%, 40%);
  font-family: "PlusJakartaSans-Medium";
  background-color: hsl(202, 86%, 94%);
}

.radio {
  background-color: hsl(0, 0%, 100%);
  border-right: none;

}



h3 {
  font-size: 22px;
  font-family: "PlusJakartaSans-Bold";
}

.p-illustration {
  font-size: 14px;
}

.results-2 {
  display: none;
  background-color: hsl(202, 55%, 16%);
  color: #ffffff;
  border-radius: 0 10px 10px 67px;
  padding: 20px;
  text-align: left;
}

.results-2 h3 {
  text-align: left;
  font-family: "PlusJakartaSans-Bold";
  font-size: 22px;
  margin-bottom: 15px;
}

.results-2 p {
  text-align: left;
  font-size: 14px;
  line-height: 1.5;
  margin-bottom: 10px;
  color: hsl(200, 26%, 54%);
  font-family: "PlusJakartaSans-Medium";
}

.repayment-details {
  border-radius: 10px;
  padding: 15px;
  margin-top: 15px;
  border-top: 4px solid hsl(61, 70%, 52%);
  background-color: hsl(203, 57%, 8%);
  height: 230px;
}
.repayments-result {
  padding: 0;
  background: none;
  border: none;
  font-size: 33px;
  color: hsl(61, 70%, 52%);
  font-family: "PlusJakartaSans-Bold";
  text-align: left;
  pointer-events: none;
}
.total-result {
  padding: 0;
  background: none;
  border: none;
  font-size: 16px;
  color: hsl(0, 0%, 100%);
  font-family: "PlusJakartaSans-Bold";
  text-align: left;
  pointer-events: none;
}


input.error {
  border-color: red;
}

.input-group-text.error {
  background-color: red;
  color: white;
}

.error-message {
  color: red;
  font-size: 0.875rem;
  margin-top: 0.25rem;

}


@media screen and (max-width: 750px) {
  body {
    padding: 0;
    margin: 0;
    height: 100%;
  }
  
  .header {
    flex-direction: column;
    text-align: center;
    padding: 10px;
  }

  .results {
    padding: 15px;
    font-size: 14px;
    border-radius: 0;
  }

  label {
    font-size: 14px;
  }



  .inline-group {
    display: block;
    gap: 5px;
  }


  button {
    width: 100%;
    height: 50px;
    border-radius: 25px;
    font-size: 16px;
  }

  .results-2 {
    padding: 15px;
  }

  .results-2 h3 {
    font-size: 18px;
  }

  .results-2 p {
    font-size: 12px;
  }

  .repayment-details {
    height: auto;
    padding: 10px;
    border-radius: 13px;
  }

  .repayments-result {
    font-size: 28px;
  }

  .total-result {
    font-size: 14px;
  }
 
}



<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mortgage Calculator</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="styles.css">
</head>

<body>

  <div class="calculator row">
    <div class="col-md-6 p-4">
      <div class="row mortgage-div">
        <h3 class="col-8">Mortgage Calculator</h3>
        <a class="clear col-4" href="index.html">Clear All</a>
      </div>

      <form action="javascript:void(0)">
        <div class="mb-3">
          <label for="mortgageAmount" class="form-label">Mortgage Amount</label>
          <div class="input-group">
            <span id="£" class="input-group-text">£</span>
            <input type="text" class="form-control" id="mortgageAmount">
          </div>
          <span class="error-message" id="mortgageAmountError"></span> <!-- Error message -->
        </div>
        <div class="mb-3 inline-group">
          <div>
            <label for="mortgageTerm" class="form-label">Mortgage Term</label>
            <div class="input-group">
              <input type="text" class="form-control" id="mortgageTerm">
              <span class="input-group-text">years</span>
            </div>
            <span class="error-message" id="mortgageTermError"></span>
          </div>
          <div>
            <label for="interestRate" class="form-label">Interest Rate</label>
            <div class="input-group">
              <input type="number" step="0.25" class="form-control interestInput" id="interestRate">
              <span class="input-group-text">%</span>
            </div>
            <span class="error-message" id="interestRateError"></span>
          </div>
        </div>
        <div class="mb-4">
  <label class="form-label input-group">Mortgage Type</label>
  <div>
    <div class="input-group prueba mb-2" id="radio-cont1">
      <div class="input-group-text radio">
        <input class="form-check-input mt-0" type="radio" name="mortgageType" id="repayment" value="repayment">
      </div>
      <input type="text" class="form-control repayment prueba" value="Repayment" readonly id="text-cont1">
    </div>
    <div class="input-group prueba" id="radio-cont2">
      <div class="input-group-text radio">
        <input class="form-check-input mt-0" type="radio" name="mortgageType" id="interestOnly" value="interestOnly">
      </div>
      <input type="text" class="form-control onlyInterest" value="Interest Only" readonly id="text-cont2">
    </div>
    <span class="error-message" id="mortgageTypeError"></span> <!-- Error message -->
  </div>
</div>

        <button id="calculateButton" onclick="validateForm(); return false;">
          <img class="emote-calculator" src="assets/images/icon-calculator.svg">Calculate Repayments
      </button>
      </form>
    </div>

    <div class="results col-md-6">
      <img class="illustration" src="assets/images/illustration-empty.svg">
      <br>
      <h3>Results shown here</h3>
      <p class="p-illustration">Complete the form and click "calculate repayments" to see what your monthly repayments would be</p>
    </div>
    <div class="results results-2 col-md-6" style="display: none;">
      <h3 class="results-title">Your results</h3>
      <p class="results-information">Your results are shown below based on the information you provided. To adjust the results, edit the form and click "calculate repayments" again.</p>

      <div class="repayment-details">
        <div class="repayment-item">
          <p>Your monthly repayments:</p>
          <input type="text" id="result" class="form-control repayments-result">
          <hr>
          <p>Total you'll repay over the term:</p>
          <input type="text" id="results2" class="form-control total-result">
        </div>
      </div>
    </div>
  </div>
  <script src="calculation.js"></script>
</body>
</html>




