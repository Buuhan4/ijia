@font-face {
  font-family: "PlusJakartaSans-Italic-VariableFont_wght";
  src: url(assets/fonts/PlusJakartaSans-Italic-VariableFont_wght.ttf);
}
@font-face {
  font-family: "PlusJakartaSans-VariableFont_wght";
  src: url(assets/fonts/PlusJakartaSans-VariableFont_wght.ttf);
}
@font-face {
  font-family: "PlusJakartaSans-Bold";
  src: url(assets/fonts/static/PlusJakartaSans-Bold.ttf);
}
@font-face {
  font-family: "PlusJakartaSans-Medium";
  src: url(assets/fonts/static/PlusJakartaSans-Medium.ttf);
}
body {
  background-color: hsl(197, 4%, 66%);
  padding: 20px;
  font-family: "PlusJakartaSans-Medium";
}
.calculator {
  max-width: 800px;
  margin: auto;
  background-color: #ffffff;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: #fff;
  padding: 15px;
}
.results {
  background-color: hsl(202, 55%, 16%);
  color: #fff;
  border-radius: 0 10px 10px 67px;
  padding: 20px;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
label {
  color: hsl(200, 24%, 40%);
}

.form-check-inline {
  display: block;
  margin-bottom: 5px;
}

.form-check-inline input {
  margin-right: 10px;
}

.inline-group {
  display: flex;
  gap: 10px;
}

.mortgage-div {
  height: 65px;
}

.clear {
  text-align: right;
  color: hsl(200, 24%, 40%);
}

button {
  height: 50px;
  width: 270px;
  border-radius: 999px;
  background-color: hsl(61, 70%, 52%);
  border: none;
  font-family:"PlusJakartaSans-Bold";

}
.emote-calculator{
    padding-right: 7px;
    width: 26px;
}
.input-group:focus-within .input-group-text {
  background-color: hsl(61, 70%, 52%);
  font-family: "PlusJakartaSans-Bold";
}

input[type="text"]:focus {
  box-shadow: none;
  appearance: none;
  border: hsl(61, 70%, 52%) solid;
}

.interestInput:focus {
  box-shadow: none;
  appearance: none;
  border: hsl(61, 70%, 52%) solid;
}

.input-group-text {
  color: hsl(200, 24%, 40%);
  font-family: "PlusJakartaSans-Medium";
  background-color: hsl(202, 86%, 94%);
}

h3 {
  font-size: 22px;
  font-family: "PlusJakartaSans-Bold";
}

.p-illustration{
    font-size: 14px;
}

.results-2 {
  display: none;
  background-color: hsl(202, 55%, 16%);
  color: #ffffff;
  border-radius: 0 10px 10px 67px;
  padding: 20px;
  text-align: left;
}

.results-2 h3 {
  text-align: left;
  font-family: "PlusJakartaSans-Bold";
  font-size: 22px;
  margin-bottom: 15px;
}

.results-2 p {
  text-align: left;
  font-size: 14px;
  line-height: 1.5;
  margin-bottom: 10px;
  color:hsl(200, 26%, 54%);
  font-family: "PlusJakartaSans-Medium";
}

.repayment-details {
  border-radius: 10px;
  padding: 15px;
  margin-top: 15px;
  border-top: 4px solid hsl(61, 70%, 52%);
  background-color:hsl(203, 57%, 8%);
  height: 230px;
}
.repayments-result {
  padding: 0;
  background: none;
  border: none;
  font-size: 33px;
  color: hsl(61, 70%, 52%);
  font-family: "PlusJakartaSans-Bold";
  text-align: left;
  pointer-events: none;
}
.total-result{
  padding: 0;
  background: none;
  border: none;
  font-size: 16px;
  color: hsl(0, 0%, 100%);
  font-family: "PlusJakartaSans-Bold";
  text-align: left;
  pointer-events: none;
}
input.error{
  border-color:hsl(4, 69%, 50%);
  background-color:hsl(4, 69%, 50%);
}

span.error-message{
  color:hsl(4, 69%, 50%);
  font-size: 7px;
  margin-top: 3px;
}



document
  .getElementById("mortgageAmount")
  .addEventListener("input", function (e) {
    let inputValue = e.target.value;
    let lastKey = inputValue.substring(inputValue.length - 1);
    if (!lastKey.match(/^[0-9,]$/)) {
      e.target.value = inputValue.substring(0, inputValue.length - 1);
    } else {
      let valueWithoutCommas = inputValue.replace(/,/g, "");
      if (valueWithoutCommas.length > 3) {
        let valueWithCommas = "";
        for (let i = 0; i < valueWithoutCommas.length; i++) {
          if (i % 3 == 0 && i !== 0) {
            valueWithCommas += ",";
          }
          valueWithCommas += valueWithoutCommas[i];
        }
        e.target.value = valueWithCommas;
      }
    }
  });

document.getElementById("mortgageTerm").addEventListener("input", function (e) {
  let inputValue = e.target.value;
  let lastKey = inputValue.substring(inputValue.length - 1);
  if (!lastKey.match(/^[0-9]$/)) {
    e.target.value = inputValue.substring(0, inputValue.length - 1);
  }
});

document.getElementById("interestRate").addEventListener("input", function (e) {
  let inputValue = e.target.value;
  let lastKey = inputValue.substring(inputValue.length - 1);
  if (!lastKey.match(/^[0-9.]$/)) {
    e.target.value = inputValue.substring(0, inputValue.length - 1);
  } else {
    let dotIndex = inputValue.indexOf(".");
    if (dotIndex !== -1 && lastKey === ".") {
      e.target.value = inputValue.substring(0, inputValue.length - 1);
    }
  }
});

function validateForm() {
  const mortgageAmount = document.getElementById("mortgageAmount");
  const mortgageTerm = document.getElementById("mortgageTerm");
  const interestRate = document.getElementById("interestRate");
  const repayment = document.getElementById("repayment");
  const interestOnly = document.getElementById("interestOnly");

  const inputs = [
    { field: mortgageAmount, message: "This field is required" },
    { field: mortgageTerm, message: "This field is required" },
    { field: interestRate, message: "This field is required" },
  ];

  let hasError = false;

  inputs.forEach(({ field, message }) => {
    const errorElement = field.nextElementSibling;
    if (field.value.trim() === "") {
      field.classList.add("error");
      if (!errorElement || !errorElement.classList.contains("error-message")) {
        const errorMessage = document.createElement("span");
        errorMessage.className = "error-message";
        errorMessage.textContent = message;
        field.parentNode.appendChild(errorMessage);
      }
      hasError = true;
    } else {
      field.classList.remove("error");
      if (errorElement && errorElement.classList.contains("error-message")) {
        errorElement.remove();
      }
    }
  });

  if (!repayment.checked && !interestOnly.checked) {
    const mortgageTypeError = document.getElementById("mortgageTypeError");
    if (!mortgageTypeError) {
      const errorMessage = document.createElement("span");
      errorMessage.className = "error-message";
      errorMessage.id = "mortgageTypeError";
      errorMessage.textContent = "Please select a Mortgage Type";
      document.querySelector(".mb-4").appendChild(errorMessage);
    }
    hasError = true;
  } else {
    const mortgageTypeError = document.getElementById("mortgageTypeError");
    if (mortgageTypeError) {
      mortgageTypeError.remove();
    }
  }

  if (!hasError) {
    calculateSum();
  }
}

document.getElementById("calculateButton").addEventListener("click", validateForm);



function calculateSum() {

  const mortgageAmount = parseFloat(document.getElementById("mortgageAmount").value.replace(/,/g, ""));
  const mortgageTerm = parseFloat(document.getElementById("mortgageTerm").value);
  const interestRate = parseFloat(document.getElementById("interestRate").value);

  if (isNaN(mortgageAmount) || isNaN(mortgageTerm) || isNaN(interestRate)) {
    return;
  }

  const isRepaymentSelected = document.getElementById("repayment").checked;
  const isInterestOnlySelected = document.getElementById("interestOnly").checked;

  if (!isRepaymentSelected && !isInterestOnlySelected) {
    return;
  }
  if (isRepaymentSelected) {
    isRepayment();
  } else if (isInterestOnlySelected) {
    isInterestOnly();
  }
}

function isRepayment() {
  const mortgageAmount = parseFloat(document.getElementById("mortgageAmount").value.replace(/,/g, ""));
  const mortgageTerm = parseFloat(document.getElementById("mortgageTerm").value);
  const interestRate = parseFloat(document.getElementById("interestRate").value);

  const months = mortgageTerm * 12;
  const monthlyRate = interestRate / 100 / 12;
  const repayment = (mortgageAmount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -months));
  const totalRepayment = repayment * months; 

  document.getElementById("result").value = `£${repayment.toFixed(2)}`;
  document.getElementById("results2").value = `£${totalRepayment.toFixed(2)}`;
  document.querySelector(".results").style.display = "none";
  document.querySelector(".results-2").style.display = "block";
}

function isInterestOnly() {
  const mortgageAmount = parseFloat(document.getElementById("mortgageAmount").value.replace(/,/g, ""));
  const mortgageTerm = parseFloat(document.getElementById("mortgageTerm").value);
  const interestRate = parseFloat(document.getElementById("interestRate").value);

  const annualInterest = mortgageAmount * (interestRate / 100);
  const totalInterest = annualInterest * mortgageTerm;

  document.getElementById("result").value = `£${annualInterest.toFixed(2)}`;
  document.getElementById("results2").value = `£${totalInterest.toFixed(2)}`;
  document.querySelector(".results").style.display = "none";
  document.querySelector(".results-2").style.display = "block";
}




<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mortgage Calculator</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="styles.css">
</head>

<body>

  <div class="calculator row">
    <div class="col-md-6 p-4">
      <div class="row mortgage-div">
        <h3 class="col-8">Mortgage Calculator</h3>
        <a class="clear col-4" href="index.html">Clear All</a>
      </div>

      <form action="javascript:void(0)">
        <div class="mb-3">
          <label for="mortgageAmount" class="form-label">Mortgage Amount</label>
          <div class="input-group">
            <span class="input-group-text">£</span>
            <input type="text" class="form-control" id="mortgageAmount">
          </div>
          <span class="error-message"></span>
        </div>
        <div class="mb-3 inline-group">
          <div>
            <label for="mortgageTerm" class="form-label">Mortgage Term</label>
            <div class="input-group">
              <input type="text" class="form-control" id="mortgageTerm">
              <span class="input-group-text">years</span>
            </div>
            <span class="error-message"></span>
          </div>
          <div>
            <label for="interestRate" class="form-label">Interest Rate</label>
            <div class="input-group">
              <input type="number" step="0.25" class="form-control" id="interestRate">
              <span class="input-group-text">%</span>
            </div>
            <span class="error-message"></span>
          </div>
        </div>
        <div class="mb-4">
          <label class="form-label input-group">Mortgage Type</label>
          <div>
            <div class="input-group">
              <div class="input-group-text">
                <input class="form-check-input mt-0" type="radio" name="mortgageType" id="repayment" value="repayment">
              </div>
              <input type="text" class="form-control" value="Repayment" disabled>
            </div>
            <div class="input-group">
              <div class="input-group-text">
                <input class="form-check-input mt-0" type="radio" name="mortgageType" id="interestOnly" value="interestOnly">
              </div>
              <input type="text" class="form-control" value="Interest Only" disabled>
            </div>
            <span class="error-message"></span>
          </div>
        </div>
        <button id="calculateButton" type="button">Calculate Repayments</button>
      </form>
    </div>

    <div class="results col-md-6">
      <h3>Results shown here</h3>
      <p class="p-illustration">Complete the form and click "Calculate Repayments" to see your monthly repayments.</p>
    </div>

    <div class="results-2 col-md-6">
      <h3>Your results</h3>
      <p>Your results are shown below based on the information you provided. To adjust the results, edit the form and click "Calculate Repayments" again.</p>
      <div class="repayment-details">
        <div class="repayment-item">
          <p>Your monthly repayments:</p>
          <input type="text" id="result" class="form-control repayments-result" readonly>
          <hr>
          <p>Total you'll repay over the term:</p>
          <input type="text" id="results2" class="form-control total-result" readonly>
        </div>
      </div>
    </div>
  </div>

  <script src="calculation.js"></script>
</body>

</html>


