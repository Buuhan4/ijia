function validateForm() {
  const mortgageAmount = document.getElementById("mortgageAmount");
  const mortgageTerm = document.getElementById("mortgageTerm");
  const interestRate = document.getElementById("interestRate");
  const repayment = document.getElementById("repayment");
  const interestOnly = document.getElementById("interestOnly");

  const inputs = [
    { field: mortgageAmount, message: "This field is required", isCurrency: true },
    { field: mortgageTerm, message: "This field is required", isCurrency: false },
    { field: interestRate, message: "This field is required", isCurrency: true },
  ];

  let hasError = false;

  inputs.forEach(({ field, message, isCurrency }) => {
    const errorElement = field.nextElementSibling;
    if (field.value.trim() === "") {
      field.classList.add("error");

      if (!errorElement || !errorElement.classList.contains("error-message")) {
        const errorMessage = document.createElement("span");
        errorMessage.className = "error-message";
        errorMessage.textContent = message;
        field.parentNode.appendChild(errorMessage);
      }
      // Si es un campo con moneda o porcentaje, aplicar color rojo
      if (isCurrency) {
        const inputGroupText = field.closest('.input-group').querySelector('.input-group-text');
        inputGroupText.classList.add("error");
      }
      hasError = true;
    } else {
      field.classList.remove("error");
      if (errorElement && errorElement.classList.contains("error-message")) {
        errorElement.remove();
      }
      if (isCurrency) {
        const inputGroupText = field.closest('.input-group').querySelector('.input-group-text');
        inputGroupText.classList.remove("error");
      }
    }
  });

  if (!repayment.checked && !interestOnly.checked) {
    const mortgageTypeError = document.getElementById("mortgageTypeError");
    if (!mortgageTypeError) {
      const errorMessage = document.createElement("span");
      errorMessage.className = "error-message";
      errorMessage.id = "mortgageTypeError";
      errorMessage.textContent = "Please select a Mortgage Type";
      document.querySelector(".mb-4").appendChild(errorMessage);
    }
    hasError = true;
  } else {
    const mortgageTypeError = document.getElementById("mortgageTypeError");
    if (mortgageTypeError) {
      mortgageTypeError.remove();
    }
  }

  if (!hasError) {
    calculateSum();
  }
}
